{{- /* Global Settings */ -}}
{{ $maxconn := getenv "VPN_HAPROXY_MAXCONN" "10000" -}}
{{ $timeout := getenv "VPN_HAPROXY_TIMEOUT" (getenv "VPN_KEEPALIVE_TIMEOUT" "60") -}}
{{- /* VPN Settings */ -}}
{{ $vpnPort := getenv "VPN_PORT" -}}
{{- /* bindOpts = "accept-proxy" unless VPN_HAPROXY_ACCEPT_PROXY == 'false' */ -}}
{{ $bindOpt := (or (and (eq (getenv "VPN_HAPROXY_USEPROXYPROTOCOL" "false") "true") "accept-proxy") "") -}}
{{- /* servers = getenv(VPN_INSTANCE_COUNT, default=getenv(NPROC) if production else 1) */ -}}
{{ $servers := (getenv "VPN_INSTANCE_COUNT" (or (and (eq (getenv "PRODUCTION_MODE") "true") (getenv "NPROC")) "1")) -}}
{{ $socket := getenv "VPN_HAPROXY_SOCKET" "/run/haproxy.sock" -}}
{{- /* https://www.haproxy.com/blog/multithreading-in-haproxy/#multithreading-configuration */ -}}
{{- /* http://cbonte.github.io/haproxy-dconv/1.8/configuration.html#3.1-nbthread */ -}}
{{ $nbthread := getenv "HAPROXY_NBTHREAD" "2" -}}
{{- /* http://cbonte.github.io/haproxy-dconv/1.8/configuration.html#cpu-map */ -}}
{{ $cpu_map := getenv "HAPROXY_CPU_MAP" "auto:1/1-2 0-1" -}}

global
	master-worker
	maxconn {{$maxconn}}
	# Manually set the ulimit to the max we allow
	ulimit-n 1048576
	user haproxy
	group haproxy
	stats socket {{$socket}} mode 600 level admin
	log /dev/log local0 {{if ne (getenv "VPN_VERBOSE_LOGS") "true"}}notice{{end}}
	nbthread {{$nbthread}}
	cpu-map {{$cpu_map}}

defaults
	timeout connect 10s
	timeout client 10s
	timeout server 10s

{{ if ne (getenv "MONITOR_SECRET_TOKEN") "" -}}
userlist metrics
	user monitor insecure-password "{{ getenv "MONITOR_SECRET_TOKEN" }}"
{{- end }}

frontend http-80
	mode http
	bind ipv4@:80
	bind ipv4@:81 accept-proxy
	acl vpn_dead nbsrv(vpn-workers) lt 1
	monitor-uri /ping
	monitor fail if vpn_dead
{{- if ne (getenv "MONITOR_SECRET_TOKEN") "" }}
	acl is-haproxy-metrics path /metrics/haproxy
	acl is-node-metrics path /metrics/node
	acl is-process-metrics path /metrics/process
	acl is-vpn-metrics path /cluster_metrics
	acl metrics-auth http_auth(metrics)
	http-request deny if !metrics-auth
	http-request use-service prometheus-exporter if is-haproxy-metrics metrics-auth
	use_backend node-exporter if is-node-metrics metrics-auth
	use_backend process-exporter if is-process-metrics metrics-auth
	use_backend vpn-master if is-vpn-metrics metrics-auth

backend node-exporter
	mode http
	server node_exporter 127.0.0.1:9000 check

backend process-exporter
	mode http
	server process_exporter 127.0.0.1:9001 check

backend vpn-master
	mode http
	log global
	option httpchk GET /ping
	http-check expect string OK
	server vpn0 127.0.0.1:8080 check
{{- end }}

frontend tcp-{{$vpnPort}}
	mode tcp
	bind ipv4@:{{$vpnPort}} shards by-thread {{$bindOpt}}
	log global
	option dontlognull
	option logasap
	option splice-auto
	option tcp-smart-accept
	maxconn {{$maxconn}}
	timeout client {{$timeout}}s
	# Routing <client-ip:port>@<frontend> to <backend>/<server>:<port> [Conns Queues Times]
	{{if eq (getenv "VPN_VERBOSE_LOGS") "true"}}log-format "Routing %ci:%cp@%ft to %b/%s:%bp [C:%bc/%sc Q:%bq/%sq T:%Tw/%Tc]"{{end}}
	default_backend vpn-workers

backend vpn-workers
	mode tcp
	log global
	balance leastconn
	option tcp-smart-connect
	timeout server {{$timeout}}s
	server-template vpn 1-{{$servers}} 127.0.0.1:10000 disabled
